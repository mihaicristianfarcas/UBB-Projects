@using HotelRoomReservation.Models
@model AvailableRoomsViewModel
@{
    ViewData["Title"] = "Available Rooms";
}

<div class="max-w-2xl mx-auto p-4">
    <h1 class="text-2xl font-semibold text-gray-800 mb-6">Available Rooms</h1>

    <form method="get" asp-action="AvailableRooms" class="bg-white border rounded p-4 mb-6 flex flex-col gap-4">
        <div class="flex flex-col md:flex-row gap-4">
            <div class="flex-1">
                <label asp-for="CheckInDate" class="block text-sm text-gray-600 mb-1">Check-in</label>
                <input asp-for="CheckInDate" type="date" class="w-full border rounded px-2 py-1 text-gray-700" />
            </div>
            <div class="flex-1">
                <label asp-for="CheckOutDate" class="block text-sm text-gray-600 mb-1">Check-out</label>
                <input asp-for="CheckOutDate" type="date" class="w-full border rounded px-2 py-1 text-gray-700" />
            </div>
            <button type="submit" class="bg-blue-600 text-white rounded px-4 py-2 mt-2 md:mt-0">Search</button>
        </div>
    </form>

    @if (ViewData.ModelState.ErrorCount > 0)
    {
        <div class="bg-red-100 text-red-700 rounded p-3 mb-4 text-sm">
            <ul class="list-disc list-inside">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="bg-red-100 text-red-700 rounded p-3 mb-4 text-sm">@TempData["Error"]</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="bg-green-100 text-green-700 rounded p-3 mb-4 text-sm">@TempData["Success"]</div>
    }

    @if (Model.AvailableRooms.Any())
    {
        <div class="mb-4">
            <h2 class="text-lg font-medium text-gray-700 mb-1">Available Rooms</h2>
            <p class="text-gray-500 text-sm">@Model.CheckInDate.ToString("MMM dd") - @Model.CheckOutDate.ToString("MMM dd, yyyy")</p>
        </div>
        <div class="grid gap-4">
            @foreach (var room in Model.AvailableRooms)
            {
                <div class="bg-white border rounded p-4 flex flex-col gap-2">
                    <div class="flex justify-between items-center">
                        <div>
                            <span class="font-semibold text-gray-800">Room @room.RoomNumber</span>
                            <span class="ml-2 text-xs text-gray-500">(@room.Capacity guests)</span>
                        </div>
                        <span class="text-blue-600 font-bold">$@room.DynamicPrice/night</span>
                    </div>
                    <div class="flex justify-between text-sm text-gray-600">
                        <span>Base: $@room.BasePrice</span>
                        @if (room.DynamicPrice > room.BasePrice)
                        {
                            <span class="text-orange-500">+@((int)(((double)(room.DynamicPrice-room.BasePrice)/room.BasePrice)*100))% surge</span>
                        }
                    </div>
                    <div class="text-sm text-gray-500">Total: $@(room.DynamicPrice * (Model.CheckOutDate - Model.CheckInDate).Days) for @((Model.CheckOutDate - Model.CheckInDate).Days) nights</div>
                    <form method="post" asp-action="Reserve" class="flex flex-col gap-2 mt-2">
                        <input type="hidden" name="roomId" value="@room.Id" />
                        <input type="hidden" name="checkIn" value="@Model.CheckInDate.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="checkOut" value="@Model.CheckOutDate.ToString("yyyy-MM-dd")" />
                        <label class="block text-xs text-gray-600">Guests</label>
                        <select name="numberOfGuests" class="border rounded px-2 py-1 text-gray-700" required>
                            @for (int i = 1; i <= room.Capacity; i++)
                            {
                                <option value="@i">@i guest@(i > 1 ? "s" : "")</option>
                            }
                        </select>
                        <button type="submit" class="bg-green-600 text-white rounded px-4 py-2 mt-2">Reserve</button>
                    </form>
                </div>
            }
        </div>
    }
    else if (Model.CheckInDate != DateTime.MinValue && Model.CheckOutDate != DateTime.MinValue)
    {
        <div class="bg-blue-50 text-blue-700 rounded p-4 text-center text-sm">No rooms available for the selected dates.</div>
    }
</div>